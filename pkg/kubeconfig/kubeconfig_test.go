package kubeconfig

import (
	"fmt"
	"net/url"
	"testing"

	"github.com/stretchr/testify/assert"
	"sigs.k8s.io/kustomize/kyaml/yaml"
)

const fixture = `
apiVersion: v1
clusters:
- cluster:
    server: https://localhost:6443
    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURBRENDQWVpZ0F3SUJBZ0lVYS80b2pJTDl0Vnh4VzhmVThiRzV4amhXS2J3d0RRWUpLb1pJaHZjTkFRRUwKQlFBd0dERVdNQlFHQTFVRUF4TU5hM1ZpWlhKdVpYUmxjeTFqWVRBZUZ3MHlNREV5TWpneE5UVTRNREJhRncwegpNREV5TWpZeE5UVTRNREJhTUJneEZqQVVCZ05WQkFNVERXdDFZbVZ5Ym1WMFpYTXRZMkV3Z2dFaU1BMEdDU3FHClNJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUNpVVpSZ3JZT2UyMTVEWTVBVzNFYWN1dlBaMEc2Rk4zUW4KalV5bmJ5ZXVDZkpIYlUyYXZGaXpKdDNyS3B3Mlg1SlB5akVCYVowanF0NGV1b1NJVk9TUkxiOVFkUzhuYmxuVwo3MHIzeVk0ajM1V2R0RFFrK0QvMEN4c0N5RXNVODduR1Y4dU1SYktOTGtWRmcrUTZYZGF1MDhYNjdZcHZnd2xDCllIQVR3V29tVW5BUDNTUWlQN3orWUZ5TlZPcXg5TzNaZjNQM3JqMjB6STdrRHBQclhOQ1hRenh5cmg1T1dpTlkKY1NLaXNLOHRHaFlmeDF1ekVoWW15MGZKSENVaERDcjlJZlZTMmRPVytqTDNab3l4SVdjdS96MVJDV005UjRjZQppWUtrNGc1Wk42MThFeit4Q0xOUXo3UEcreDlhenBERW50Q045ZFpERFF5UkhxSWtwbFluQWdNQkFBR2pRakJBCk1BNEdBMVVkRHdFQi93UUVBd0lCQmpBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJUaHdLMkYKUjViOVpPTlNRcytIY1I1eVcxemZQVEFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBY3VLTWNQR0dyVEVoK29HWgphc3YwSTBBWWVocUR4TnFmYTRKRTBtOVZvUFhBTjgyZ1NDQVBqMk5HRWRPWithTktlVVNwUUdGNVUvczlYSFdwCmM1M2JVTjZseHNRNGh6alY1SjJHTGs2Nng0aHhjelB0SjJJOU5LVnZCb0wzaVh4MWUrS1JHVFVDQ2hEZHVMdXkKSmZTRWtqemhVZGY5RHVVa251NlBleFNwdDZsUlBCQ1RlMU1VNDhDcnd1U0grQk9BcGFoRzN2TFlqL3E0c0FBZgphcUhqUWlGMTFoM2ZXaGdiaS9UWnJPV0FzVXhTcExUWE5QazNHSStuREViRFVXbU5nZ0lCMTMxQTVOa1F6TTBMCnV5dGhObWJjZGkxVUgrUk9oTTJ6WER3WHN4RUdMMWVxNHNGcERSdHNiTTY2WkNOeHc4dCs5N0czQy9xVC9UdFoKZ2NWMkdnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  name: local
contexts:
- context:
    cluster: local
    namespace: default
    user: user
  name: Default
current-context: Default
kind: Config
preferences: {}
users:
- name: user
  user:
    client-certificate-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXVENDQWtHZ0F3SUJBZ0lVQ3hCZ1hhRDJ2WVJOWmtMYzJNYlhLVk9YTDEwd0RRWUpLb1pJaHZjTkFRRUwKQlFBd0dERVdNQlFHQTFVRUF4TU5hM1ZpWlhKdVpYUmxjeTFqWVRBZUZ3MHlNREV5TWpneE5UVTRNREJhRncweQpNVEV5TWpneE5UVTRNREJhTURReEZ6QVZCZ05WQkFvVERuTjVjM1JsYlRwdFlYTjBaWEp6TVJrd0Z3WURWUVFECkV4QnJkV0psY201bGRHVnpMV0ZrYldsdU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQXhQeGc1QW9wbUk2bmFxbnR0QUlJWnpHMjBLODNobmJJWm9CTk0wS0piMjNkNzlSeHdYbnBRVG5jNGNKMwpXZjBteXl2NlVpOWFoeHpOLzRWVzdWVFIxUUI4ZW51TzkzRVpOcG54L1IvK2FkQ2Rqc3ZmempzWmVoaFlQR29uCkl5bmlEbmN0T2tmSzZGTUVoZVJKTGZTTGlHRkZpWjNOclVqU1QvTVl2eHg5cVl1NENzcy9lUHpkWHo4STY5cVQKQXZCR1JIVjVtemxsU0tzYUUyUzkzRlYrTGdsR2JQZG5mbFRqTis1M3BHcWRjU2tINFZNQjV1K0NYNXVBZTVoYwp6ZjcreXlnVGEzMDRHQ1hRdTl1djE1NkJacnl4MitGUUhCbHRpTnNXclhJZTV0L1BuMEM5VDNrYU9SOC9NcWtyCmNmMzhtSXdTRFBIZzlMaUpBYTBQNTBNYUV3SURBUUFCbzM4d2ZUQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWUQKVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdIUVlEVlIwTwpCQllFRk9KUVpGYmMwaHQ3Y1BOSkorKy8rZkFGcGw4QU1COEdBMVVkSXdRWU1CYUFGT0hBcllWSGx2MWs0MUpDCno0ZHhIbkpiWE44OU1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQnNhTit4OGdwc2tTV3Z5RUxFYnBuRUtlOWsKd0JYUzhFZEpFUGI3dlpPUEhsR0Mvem5qMTRkMDNKQXBsMUppMG5zbjdqZUxtb3hEcXpZcGtjTkxsZk44QUNxMgo3dWJibnBpRUFuZjQ5TEVLb2Ewa0N4b2huYWlUMGd4ZGliamdyVFVzQ1lkTXRYdzN5WVlEaHArUU9CcEppc2hOCkNGeCsrUUsrenFiRXJQSnNHaTNUaDBYRzRoQjJGb2UyWXRkZS9NQm5oZ25QZkorVUk1VklyTzhmTUtIQmtlUHAKRjNINWthKzBlcExGdXB0UjZSRndrZUkvWDFwUHo5RVdmKzROWmZHc3g1T3FaWWFscEtNdU5yUzBKVGY2QmJGMApLUGl1UlNhVElLYXppOHEyQ3NudGtWV3FzY2Q2S1pkcExTRXNrY21tS0ZkUWRKc01rc1NubVcwU0xhdXUKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    client-key-data: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeFB4ZzVBb3BtSTZuYXFudHRBSUlaekcyMEs4M2huYklab0JOTTBLSmIyM2Q3OVJ4CndYbnBRVG5jNGNKM1dmMG15eXY2VWk5YWh4ek4vNFZXN1ZUUjFRQjhlbnVPOTNFWk5wbngvUi8rYWRDZGpzdmYKempzWmVoaFlQR29uSXluaURuY3RPa2ZLNkZNRWhlUkpMZlNMaUdGRmlaM05yVWpTVC9NWXZ4eDlxWXU0Q3NzLwplUHpkWHo4STY5cVRBdkJHUkhWNW16bGxTS3NhRTJTOTNGVitMZ2xHYlBkbmZsVGpOKzUzcEdxZGNTa0g0Vk1CCjV1K0NYNXVBZTVoY3pmNyt5eWdUYTMwNEdDWFF1OXV2MTU2QlpyeXgyK0ZRSEJsdGlOc1dyWEllNXQvUG4wQzkKVDNrYU9SOC9NcWtyY2YzOG1Jd1NEUEhnOUxpSkFhMFA1ME1hRXdJREFRQUJBb0lCQUVKNWVLajcxUFdxamt5cwpjNDdmY0w2Q1JGTkFEZGpPbE9vaU9lc21kUUtwYk0vV1BWMHhLc25jSVBIK2toQklJYU5HZi83a0JBUzhiN2ZlCjQyckx5Tk84aWtVN0ZRL2psc0thU05OR3pMQWd1a3JKK2dpNllPcVc5SS9Pc3M1bS8rWXB5WlYxVE1BQjQvRGIKRE9iNU0yMGVoanplaDk0R1NSSzUwb3dMclV4ZFJjelpPSEswVXRBdmw1bzM3WWgxUTYvNHV1MzRDMXRuaGFOVwpLWVY1OTI2YUp6L1NxUXFqVllyUEQ1VmZjNnhzdW9CeVZGa3UwNkN6SmtDM09vbWFkNUIvZGdOZGQ4WlJ2bmJhCm5FQXM4MU1UR1poVVBlSS9XaEtsekIyNDdnR3pnWjRKSk9LVys1dlRxckw1eUZ5NzZyU3dUU3piYWVsSFQxdTMKRi80MVhzRUNnWUVBOXM1SzB3elUvMVY4ampIMVRmOVdWcFhqa3cyWTdOOHVUUFpkVng2RXlJUW1ENWRUblZTWgpNTE8xZ3JuZE5SeUZRU0lDWGJLdm1tVDQvNjNNTG1GY1d2d1J1YnNYd2hWaWRqUHdLUi83U1NxNmNBZzhHbkxSCjBFek9iYWRhZ3hsSURHUU9iZDV1VnpJaDhSQXI4WUtFc3JXdXZFTEtHR3p5ZHEvZnRrdmFuemtDZ1lFQXpGTDQKR1BFcnBYK1JsbkNQU25rZ3c1YTRUQStQYW9jdCsvdkpjTE5Qa0pIV3ZOcWVSUlAzbS9GazNuUit3Nk5reGM3RgpJRmYxSHNKTTI1b3paVWdqWSt6UzgrNnRlREI5d1BGS0ZYcDFxanBjTm4xUmhIdk1LOUhLRjkvdGhocUhNZFBHCkVnQzNjTGVqTEhGdFpoL0RTTnhOSVpnOFd2a3lwQXFFR3M2eHQ2c0NnWUJDcFNnZFg0eXd1a1BkSGU1d3RtOTUKQ0JhZzRmNFdrSm12SEtQTjM2YlpncDNJZmdPTks0Z0dWN0MrOFRPam9PVDIxcGt1OWc1bk1iYnZTOTRqOUJSOQpXUzNzS25KYTdXMWVIOTVOTEo2dGZrVkQ5V1ZOZXczZklxNW5lOVo4S2pxRFpnMWphN245LzhLY2x0Slc3L2luClRWbzI2ZzRxbEZqUTVlTVNGZCtlT1FLQmdRQzhVV0F2Qk9ENGVUcERFTjFRZzVHS0Uza3JTVkFpbkJMcTQyY0gKUTR6NnJ4L2ZFaE83a1NxdkJPNjJCV0xzaDhVU2QzL0NUcTh5T1Z6RExqMWVoUDF4Vk00ZFc0ZHdkaWtCVXFLNApaeFRaMzA0c1BwYUtaOXVISzZWN0diMSsweVoxNnp6c1ROTEZ4Y3RUNC9zem0rVE9XNVdQZUJOd3VhdE4vQTlECjhldGtYd0tCZ1FDY0NUa1I5cXhIMURQWmhqR0NvdnJCdEJpMW1IV1RaQXppSjFTL3NIWEczZldPelBZdElpTjYKdjN2SWt1eXhMbjJQSTdQSTZYMjYzdDQ2NDlzL1BiTXppa2MySTlvTUJ1cUoyL3gxUTBFOCtqeUYzZm9wLzJLZwpaRU5VZERQMkRqc2w5VXQwUXBNM1NPR2tGK3RKL3I2OUFMSnYySzFZZGxveWoreVBzUG1LTmc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
`

func TestRewriteKubeconfig(t *testing.T) {
	obj, err := yaml.Parse(fixture)
	assert.NoError(t, err)

	server, err := obj.Pipe(yaml.Lookup("clusters", "[name=local]", "cluster", "server"))
	assert.NoError(t, err)

	serverUrl := yaml.GetValue(server)
	assert.NoError(t, err)
	assert.Equal(t, "https://localhost:6443", serverUrl)
	u, err := url.Parse(serverUrl)
	assert.NoError(t, err)

	n := fmt.Sprintf("%s://%s:%s", u.Scheme, u.Hostname(), "10000")
	assert.Equal(t, "https://localhost:10000", n)

	err = obj.PipeE(
		yaml.Lookup("clusters", "[name=local]", "cluster", "server"),
		yaml.Set(yaml.NewScalarRNode(n)),
	)
	assert.NoError(t, err)
	s, err := obj.String()
	fmt.Print(s)
}

func TestPortRewrite(t *testing.T) {
	// TODO complete test case
	x, err := RewriteKubeConfigForEKZ("abc-abc", fixture, "10000")
	assert.NoError(t, err)
	fmt.Print(x)
}
